import numpy as np 

def FeketePointsTet(C):
	if C==0:
		feketeNodes = np.array([
        	[-1.,  -1.,   -1.],
            [1.,   -1.,   -1.],
            [-1.,   1.,   -1.],
            [-1.,  -1.,    1.]
            ])
	elif C==1:
		feketeNodes = np.array([
        	[-1.,   -1.,    -1.],
            [1.,    -1.,    -1.],
            [-1.,    1.,    -1.],
            [-1.,   -1.,     1.],
            [0.,    -1.,    -1.],
            [-1.,    0.,    -1.],
            [0.,     0.,    -1.],
            [-1.,   -1.,     0.],
            [0.,    -1.,     0.],
            [-1.,    0.,     0.]
            ])
	elif C==2:
		feketeNodes = np.array([
			[-1.000000000000000,  -1.000000000000000,  -1.000000000000000],
            [1.000000000000000,  -1.000000000000000,  -1.000000000000000],
            [-1.000000000000000,   1.000000000000000,  -1.000000000000000],
            [-1.000000000000000, -1.000000000000000,   1.000000000000000],
            [-0.447213595499958,  -1.000000000000000,  -1.000000000000000],
            [0.447213595499958,  -1.000000000000000,  -1.000000000000000],
            [-1.000000000000000,  -0.447213595499958,  -1.000000000000000],
            [-0.333333333333333,  -0.333333333333333,  -1.000000000000000],
            [0.447213595499958,  -0.447213595499958,  -1.000000000000000],
            [-1.000000000000000,   0.447213595499958,  -1.000000000000000],
            [-0.447213595499958,   0.447213595499958,  -1.000000000000000],
            [-1.000000000000000,  -1.000000000000000,  -0.447213595499958],
            [-0.333333333333333,  -1.000000000000000,  -0.333333333333333],
            [0.447213595499958,  -1.000000000000000, -0.447213595499958],
            [-1.000000000000000,  -0.333333333333333,  -0.333333333333333],
            [-0.333333333333333,  -0.333333333333333,  -0.333333333333333],
            [-1.000000000000000,   0.447213595499958,  -0.447213595499958],
            [-1.000000000000000,  -1.000000000000000,   0.447213595499958],
            [-0.447213595499958,  -1.000000000000000,   0.447213595499958],
            [-1.000000000000000,  -0.447213595499958,   0.447213595499958]
            ])
	elif C==3:
		feketeNodes = np.array([
			[-1.000000000000000,  -1.000000000000000,  -1.000000000000000],
            [1.000000000000000,  -1.000000000000000,  -1.000000000000000],
            [-1.000000000000000,   1.000000000000000,  -1.000000000000000],
            [-1.000000000000000, -1.000000000000000,   1.000000000000000],
            [-0.654653670707977,  -1.000000000000000,  -1.000000000000000],
            [0.0000,             -1.000000000000000,   -1.000000000000000],
            [0.654653670707977,  -1.000000000000000,  -1.000000000000000],
            [-1.000000000000000,  -0.654653670707977,  -1.000000000000000],
            [-0.551551223569326,  -0.551551223569326,  -1.000000000000000],
            [0.103102447138651,  -0.551551223569326,  -1.000000000000000],
            [0.654653670707977,  -0.654653670707977,  -1.000000000000000],
            [-1.000000000000000,   0.00000000000000,  -1.000000000000000],
            [-0.551551223569326,   0.103102447138651,  -1.000000000000000],
            [0.000,                0.000000000000000,  -1.000000000000000],
            [-1.000000000000000,   0.654653670707977,  -1.000000000000000],
            [-0.654653670707977,   0.654653670707977,  -1.000000000000000],
            [-1.000000000000000,  -1.000000000000000,  -0.654653670707977],
            [-0.551551223569326,  -1.000000000000000,  -0.551551223569326],
            [0.103102447138651,  -1.000000000000000,  -0.551551223569326],
            [0.654653670707977,  -1.000000000000000,  -0.654653670707977],
            [-1.000000000000000,  -0.551551223569326,  -0.551551223569326],
            [-0.500000000000000,  -0.500000000000000,  -0.500000000000000],
            [0.103102447138651,  -0.551551223569326,  -0.551551223569326],
            [-1.000000000000000,   0.103102447138651,  -0.551551223569326],
            [-0.551551223569326,   0.103102447138651,  -0.551551223569326],
            [-1.000000000000000,   0.654653670707977,  -0.654653670707977],
            [-1.000000000000000,  -1.000000000000000,    0.00000000000000],
            [-0.551551223569326,  -1.000000000000000,   0.103102447138651],
            [0.0,                 -1.000000000000000,      0.000000000000],
            [-1.000000000000000,  -0.551551223569326,   0.103102447138651],
            [-0.551551223569326,  -0.551551223569326,   0.103102447138651],
            [-1.000000000000000,                  0.,                 0.0],
            [-1.000000000000000,  -1.000000000000000,   0.654653670707977],
            [-0.654653670707977,  -1.000000000000000,   0.654653670707977],
            [-1.000000000000000,  -0.654653670707977,   0.654653670707977]
            ])
	elif C==4:
		feketeNodes = np.array([
			[-1.000000000000000,  -1.000000000000000,  -1.000000000000000],
            [1.000000000000000,  -1.000000000000000,  -1.000000000000000],
            [-1.000000000000000,   1.000000000000000,  -1.000000000000000],
            [-1.000000000000000,  -1.000000000000000,   1.000000000000000],
            [-0.765055323929465,  -1.000000000000000,  -1.000000000000000],
            [-0.285231516480645,  -1.000000000000000,  -1.000000000000000],
            [0.285231516480645,  -1.000000000000000,  -1.000000000000000],
            [0.765055323929465,  -1.000000000000000,  -1.000000000000000],
            [-1.000000000000000,  -0.765055323929465,  -1.000000000000000],
            [-0.683428946803370,  -0.683428946803370,  -1.000000000000000],
            [-0.173392064183727,  -0.653215871632546,  -1.000000000000000],
            [0.366857893606740,  -0.683428946803370,  -1.000000000000000],
            [0.765055323929465,  -0.765055323929465,  -1.000000000000000],
            [-1.000000000000000,  -0.285231516480645,  -1.000000000000000],
            [-0.653215871632546,  -0.173392064183727,  -1.000000000000000],
            [-0.173392064183727,  -0.173392064183727,  -1.000000000000000],
            [0.285231516480645,  -0.285231516480645,  -1.000000000000000],
            [-1.000000000000000,   0.285231516480645,  -1.000000000000000],
            [-0.683428946803370,   0.366857893606740,  -1.000000000000000],
            [-0.285231516480645,   0.285231516480645,  -1.000000000000000],
            [-1.000000000000000,   0.765055323929465,  -1.000000000000000],
            [-0.765055323929465,   0.765055323929465,  -1.000000000000000],
            [-1.000000000000000,  -1.000000000000000,  -0.765055323929465],
            [-0.683428946803370,  -1.000000000000000,  -0.683428946803370],
            [-0.173392064183727,  -1.000000000000000,  -0.653215871632546],
            [0.366857893606740,  -1.000000000000000,  -0.683428946803370],
            [0.765055323929465,  -1.000000000000000,  -0.765055323929465],
            [-1.000000000000000,  -0.683428946803370,  -0.683428946803370],
            [-0.619955951862205,  -0.619955951862205,  -0.619955951862205],
            [-0.140132144413385,  -0.619955951862205,  -0.619955951862205],
            [0.366857893606740,  -0.683428946803370,  -0.683428946803370],
            [-1.000000000000000,  -0.173392064183727,  -0.653215871632546],
            [-0.619955951862205,  -0.140132144413385,  -0.619955951862205],
            [-0.173392064183727,  -0.173392064183727,  -0.653215871632546],
            [-1.000000000000000,   0.366857893606740,  -0.683428946803370],
            [-0.683428946803370,   0.366857893606740,  -0.683428946803370],
            [-1.000000000000000,   0.765055323929465,  -0.765055323929465],
            [-1.000000000000000,  -1.000000000000000,  -0.285231516480645],
            [-0.653215871632546,  -1.000000000000000,  -0.173392064183727],
            [-0.173392064183727,  -1.000000000000000,  -0.173392064183727],
            [0.285231516480645,  -1.000000000000000, -0.285231516480645],
            [-1.000000000000000,  -0.653215871632546,  -0.173392064183727],
            [-0.619955951862205,  -0.619955951862205,  -0.140132144413385],
            [-0.173392064183727,  -0.653215871632546,  -0.173392064183727],
            [-1.000000000000000,  -0.173392064183727,  -0.173392064183727],
            [-0.653215871632546,  -0.173392064183727,  -0.173392064183727],
            [-1.000000000000000,   0.285231516480645,  -0.285231516480645],
            [-1.000000000000000,  -1.000000000000000,   0.285231516480645],
            [-0.683428946803370,  -1.000000000000000,   0.366857893606740],
            [-0.285231516480645,  -1.000000000000000,   0.285231516480645],
            [-1.000000000000000,  -0.683428946803370,   0.366857893606740],
            [-0.683428946803370,  -0.683428946803370,   0.366857893606740],
            [-1.000000000000000,  -0.285231516480645,   0.285231516480645],
            [-1.000000000000000,  -1.000000000000000,   0.765055323929465],
            [-0.765055323929465,  -1.000000000000000,   0.765055323929465],
            [-1.000000000000000,  -0.765055323929465,   0.765055323929465]
            ])
	elif C==5:
		feketeNodes = np.array([
        	[-1.000000000000000e+000,   -1.000000000000000e+000,   -1.000000000000000e+000],
            [1.000000000000000e+000,    -1.000000000000000e+000,   -1.000000000000000e+000],
            [-1.000000000000000e+000,    1.000000000000000e+000,   -1.000000000000000e+000],
            [-1.000000000000000e+000,   -1.000000000000000e+000,    1.000000000000000e+000],
            [-8.302238962785670e-001,   -1.000000000000000e+000,   -1.000000000000000e+000],
            [-4.688487934707142e-001,   -1.000000000000000e+000,   -1.000000000000000e+000],
            [0.,   					    -1.000000000000000e+000,   -1.000000000000000e+000],
            [4.688487934707142e-001,    -1.000000000000000e+000,   -1.000000000000000e+000],
            [8.302238962785671e-001,    -1.000000000000000e+000,   -1.000000000000000e+000],
            [-1.000000000000000e+000,   -8.302238962785671e-001,   -1.000000000000000e+000],
            [-7.663575632497603e-001,   -7.663575632497603e-001,   -1.000000000000000e+000],
            [-3.691578968876205e-001,   -7.305329996954733e-001,   -1.000000000000000e+000],
            [9.969089658309382e-002,    -7.305329996954733e-001,   -1.000000000000000e+000],
            [5.327151264995207e-001,    -7.663575632497605e-001,   -1.000000000000000e+000],
            [8.302238962785671e-001,    -8.302238962785670e-001,   -1.000000000000000e+000],
            [-1.000000000000000e+000,   -4.688487934707142e-001,   -1.000000000000000e+000],
            [-7.305329996954733e-001,   -3.691578968876205e-001,   -1.000000000000000e+000],
            [-3.333333333333334e-001,   -3.333333333333334e-001,   -1.000000000000000e+000],
            [9.969089658309382e-002,    -3.691578968876205e-001,  -1.000000000000000e+000],
            [4.688487934707142e-001,    -4.688487934707142e-001,   -1.000000000000000e+000],
            [-1.000000000000000e+000,                        0.,   -1.000000000000000e+000],
            [-7.305329996954733e-001,    9.969089658309382e-002,   -1.000000000000000e+000],
            [-3.691578968876205e-001,    9.969089658309382e-002,   -1.000000000000000e+000],
            [0.,                         0.,                        -1.000000000000000e+000],
            [-1.000000000000000e+000,    4.688487934707142e-001,   -1.000000000000000e+000],
            [-7.663575632497605e-001,    5.327151264995207e-001,   -1.000000000000000e+000],
            [-4.688487934707142e-001,    4.688487934707142e-001,   -1.000000000000000e+000],
            [-1.000000000000000e+000,    8.302238962785671e-001,   -1.000000000000000e+000],
            [-8.302238962785671e-001,    8.302238962785671e-001,   -1.000000000000000e+000],
            [-1.000000000000000e+000,   -1.000000000000000e+000,   -8.302238962785670e-001],
            [-7.663575632497603e-001,   -1.000000000000000e+000,   -7.663575632497603e-001],
            [-3.691578968876205e-001,   -1.000000000000000e+000,   -7.305329996954733e-001],
            [9.969089658309382e-002,    -1.000000000000000e+000,  -7.305329996954733e-001],
            [5.327151264995207e-001,     -1.000000000000000e+000,   -7.663575632497605e-001],
            [8.302238962785671e-001,     -1.000000000000000e+000,   -8.302238962785670e-001],
            [-1.000000000000000e+000,    -7.663575632497603e-001,   -7.663575632497603e-001],
            [-7.075559740696417e-001,    -7.075559740696417e-001,   -7.075559740696417e-001],
            [-3.193124485960736e-001,    -6.806875514039265e-001,   -6.806875514039265e-001],
            [1.226679222089253e-001,     -7.075559740696417e-001,   -7.075559740696417e-001],
            [5.327151264995207e-001,     -7.663575632497603e-001,   -7.663575632497603e-001],
            [-1.000000000000000e+000,    -3.691578968876205e-001,   -7.305329996954733e-001],
            [-6.806875514039265e-001,    -3.193124485960736e-001,   -6.806875514039263e-001],
            [-3.193124485960734e-001,    -3.193124485960734e-001,   -6.806875514039263e-001],
            [9.969089658309382e-002,     -3.691578968876205e-001,   -7.305329996954733e-001],
            [-1.000000000000000e+000,     9.969089658309382e-002,   -7.305329996954733e-001],
            [-7.075559740696417e-001,     1.226679222089253e-001,   -7.075559740696417e-001],
            [-3.691578968876206e-001,     9.969089658309382e-002,   -7.305329996954733e-001],
            [-1.000000000000000e+000,     5.327151264995207e-001,   -7.663575632497605e-001],
            [-7.663575632497602e-001,     5.327151264995207e-001,   -7.663575632497605e-001],
            [-1.000000000000000e+000,     8.302238962785671e-001,   -8.302238962785670e-001],
            [-1.000000000000000e+000,    -1.000000000000000e+000,   -4.688487934707142e-001],
            [-7.305329996954733e-001,    -1.000000000000000e+000,   -3.691578968876205e-001],
            [-3.333333333333334e-001,    -1.000000000000000e+000,   -3.333333333333334e-001],
            [9.969089658309382e-002,    -1.000000000000000e+000,   -3.691578968876205e-001],
            [4.688487934707142e-001,     -1.000000000000000e+000,   -4.688487934707142e-001],
            [-1.000000000000000e+000,    -7.305329996954733e-001,   -3.691578968876205e-001],
            [-6.806875514039263e-001,    -6.806875514039263e-001,   -3.193124485960736e-001],
            [-3.193124485960734e-001,    -6.806875514039263e-001,   -3.193124485960734e-001],
            [9.969089658309382e-002,     -7.305329996954733e-001,   -3.691578968876205e-001],
            [-1.000000000000000e+000,   -3.333333333333334e-001,   -3.333333333333334e-001],
            [-6.806875514039263e-001,   -3.193124485960734e-001,   -3.193124485960734e-001],
            [-3.333333333333332e-001,   -3.333333333333334e-001,   -3.333333333333334e-001],
            [-1.000000000000000e+000,    9.969089658309382e-002,   -3.691578968876205e-001],
            [-7.305329996954734e-001,    9.969089658309382e-002,   -3.691578968876205e-001],
            [-1.000000000000000e+000,    4.688487934707142e-001,   -4.688487934707142e-001],
            [-1.000000000000000e+000,   -1.000000000000000e+000,                        0.],
            [-7.305329996954733e-001,   -1.000000000000000e+000,    9.969089658309382e-002],
            [-3.691578968876205e-001,   -1.000000000000000e+000,    9.969089658309382e-002],
            [0.,                        -1.000000000000000e+000,                        0.],
            [-1.000000000000000e+000,   -7.305329996954733e-001,    9.969089658309382e-002],
            [-7.075559740696417e-001,   -7.075559740696417e-001,    1.226679222089253e-001],
            [-3.691578968876206e-001,   -7.305329996954733e-001,    9.969089658309382e-002],
            [-1.000000000000000e+000,   -3.691578968876205e-001,    9.969089658309382e-002],
            [-7.305329996954733e-001,   -3.691578968876205e-001,    9.969089658309382e-002],
            [-1.000000000000000e+000,                        0.,                        0.],
            [-1.000000000000000e+000,   -1.000000000000000e+000,    4.688487934707142e-001],
            [-7.663575632497605e-001,   -1.000000000000000e+000,    5.327151264995207e-001],
            [-4.688487934707142e-001,   -1.000000000000000e+000,    4.688487934707142e-001],
            [-1.000000000000000e+000,   -7.663575632497605e-001,    5.327151264995207e-001],
            [-7.663575632497603e-001,   -7.663575632497605e-001,    5.327151264995207e-001],
            [-1.000000000000000e+000,   -4.688487934707142e-001,    4.688487934707142e-001],
            [-1.000000000000000e+000,   -1.000000000000000e+000,    8.302238962785671e-001],
            [-8.302238962785671e-001,   -1.000000000000000e+000,    8.302238962785671e-001],
            [-1.000000000000000e+000,   -8.302238962785671e-001,    8.302238962785671e-001]
            ])
	else:
		raise NotImplementedError("Tetrahedral Fekete points beyond C=5 not available")

	return feketeNodes 
